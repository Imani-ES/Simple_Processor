module InstructionMemory(
    input [7:0] give_instruction,
    input [7:0] pc,
    input clk,
    output reg rs,
    output reg rt,
    output reg rd,
    output reg [2:0] immediate,
    output reg [7:0] instruction,
    output reg [2:0] ctrl,
    output reg [4:0] jmp_address
    );
    reg [7:0] mem [255:0];//256 long array of 8 bit instructions 
    initial begin     
        mem[0] = give_instruction; //add $t0,$t1,$t0
        mem[1] = 8'b10101000; //sub $t0,$t1,$t0
        mem[2] = 8'b10001101; //addi $t0,$t1,5
        mem[3] = 8'b00001000; //lw $t0,0(%t1)
        mem[4] = 8'b01000011; //j L1
        mem[5] = 8'b00101000; //sw $t0,0($t1)
    end
    always @ (posedge(clk)) begin
    instruction = mem[pc];
    ctrl = instruction[7:5];
    rs = instruction[3];
    rt = instruction[4];
    rd = instruction[4];
    immediate = instruction[2:0];
    jmp_address = instruction[4:0];
    end  
endmodule
